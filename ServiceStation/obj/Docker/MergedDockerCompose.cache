name: dockercompose431493579175213511
services:
  api.gateway:
    build:
      context: C:\Навчання\OOP\project\ServiceStation\ServiceStation\ServiceStation
      dockerfile: API.GATEWAY/Dockerfile
    depends_on:
      servicestation.api:
        condition: service_started
        required: true
      taskmanagerformechanic.web:
        condition: service_started
        required: true
      webapplication:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: apigateway
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 80
        published: "2000"
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  rabbitmq:
    container_name: Rabbitmq
    environment:
      RBBITMQ_DEFAULT_PASS: guest
      RBBITMQ_DEFAULT_USER: guest
    image: rabbitmq:3.11.7-management
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Навчання\OOP\project\ServiceStation\ServiceStation\ServiceStation\.containers\queue\data
        target: /var/lib/rabbitmq
        bind:
          create_host_path: true
      - type: bind
        source: C:\Навчання\OOP\project\ServiceStation\ServiceStation\ServiceStation\.containers\queue\log
        target: /var/lib/rabbitmq
        bind:
          create_host_path: true
  servicestation.api:
    build:
      context: C:\Навчання\OOP\project\ServiceStation\ServiceStation\ServiceStation
      dockerfile: ClientPart/ServiceStation.API/Dockerfile
    container_name: ClientAPI
    depends_on:
      servicestationapidatabase:
        condition: service_started
        required: true
      servicestationapirediscash:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: ClientAPIDatabase
      DB_NAME: ServiceStation
      DB_SA_PASSWORD: Qwerty123
      RBBITMQ_PASS: ' guest'
      RBBITMQ_USER: ' guest'
      REDIS: ClientAPIRedisCash
    image: servicestationapi
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 80
        published: "2030"
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  servicestationapidatabase:
    container_name: ClientAPIDatabase
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: Qwerty123
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
  servicestationapirediscash:
    container_name: ClientAPIRedisCash
    image: redis:7
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
  taskmanagerformechanic.web:
    build:
      context: C:\Навчання\OOP\project\ServiceStation\ServiceStation\ServiceStation
      dockerfile: MechanicPart/TaskManagerForMechanic.WEB/Dockerfile
    container_name: MechanicAPI
    depends_on:
      taskmanagerformechanicdatabase:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: MechanicAPIDatabase
      DB_NAME: ServiceStation
      DB_SA_PASSWORD: Qwerty123
      RBBITMQ_PASS: ' guest'
      RBBITMQ_USER: ' guest'
    image: taskmanagerformechanicweb
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 80
        published: "2020"
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  taskmanagerformechanicdatabase:
    container_name: MechanicAPIDatabase
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: Qwerty123
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1423"
        protocol: tcp
  webapplication:
    build:
      context: C:\Навчання\OOP\project\ServiceStation\ServiceStation\ServiceStation
      dockerfile: AdminPart/WebApplication/Dockerfile
    container_name: ManagerAPI
    depends_on:
      webapplicationdatabase:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: ManagerAPIDatabase
      DB_NAME: ServiceStation
      DB_SA_PASSWORD: Qwerty123
      RBBITMQ_PASS: ' guest'
      RBBITMQ_USER: ' guest'
    image: webapplication
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 80
        published: "2040"
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mosso\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  webapplicationdatabase:
    container_name: ManagerAPIDatabase
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: Qwerty123
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      ServiceStationNetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1443"
        protocol: tcp
networks:
  ServiceStationNetwork:
    name: dockercompose431493579175213511_ServiceStationNetwork